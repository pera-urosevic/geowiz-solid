import{a as y,o as p,s as S,i as r,e,S as G,M as u,b as f,d as F,h as l,t as m}from"./index.804c515a.js";import{g as t,B as c,a as C,b as _,c as $,d as v,e as b}from"./App.16749d3a.js";import{F as N}from"./Flag.67b166b0.js";import{g as d,S as P,a as x,s as E,b as i,R as M}from"./Game.module.8f5c1fb3.js";const k="_GameFlag_tdww7_1";var B={GameFlag:k};const I=m("<div></div>"),L=m('<div id="game"></div>'),j=()=>{const[s,g]=y(d()),w=()=>s().id,h=a=>{const n=s().id===a.id,R=n?10:-15;t.onRoundEnd(n,R)},o=async()=>{if(t.hasNextRound()){await C({targets:"#round"});const a=d();g(a),t.onRoundStart(),await _({targets:"#round"})}else await $({targets:"#game"}),t.onQuit()};return p(async()=>{t.onReset(),t.onRoundStart(),await v({targets:"#game"})}),(()=>{const a=L.cloneNode(!0);return S(a,()=>b([i.Game,B.GameFlag]),!1,!0),r(a,e(P,{}),null),r(a,e(M,{id:"round",get children(){return[e(G,{get children(){return[e(u,{get when(){return t.isPhaseGuess()},get children(){const n=I.cloneNode(!0);return r(n,e(x,{items:E,onSelect:h})),f(()=>F(n,i.guess)),n}}),e(u,{get when(){return t.isPhaseReveal()},get children(){return[e(l,{get when(){return t.wonLastRound()},get children(){return e(c,{onClick:o,type:"win",get label(){return`You answered correctly "${s().name}"`}})}}),e(l,{get when(){return!t.wonLastRound()},get children(){return e(c,{onClick:o,type:"lose",get label(){return`The correct answer was "${s().name}"`}})}})]}})]}}),e(N,{id:w})]}}),null),a})()};export{j as default};
